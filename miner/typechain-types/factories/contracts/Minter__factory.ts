/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Minter, MinterInterface } from "../../contracts/Minter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "plonkVerifier_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "amountMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Minter.MintClaim[]",
        name: "claims",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "depositTreeRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "eligibleTreeRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "lastClaimHash",
            type: "bytes32",
          },
        ],
        internalType: "struct Minter.ClaimPublicInputs",
        name: "publicInputs",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountMultiplier_",
        type: "uint256",
      },
    ],
    name: "setAmountMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IINTMAXToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IPlonkVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052670de0b6b3a76400006003553480156200001d57600080fd5b506040516200166f3803806200166f833981810160405281019062000043919062000283565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b95760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000b09190620002db565b60405180910390fd5b620000ca816200015560201b60201c565b5081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002f8565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200024b826200021e565b9050919050565b6200025d816200023e565b81146200026957600080fd5b50565b6000815190506200027d8162000252565b92915050565b600080604083850312156200029d576200029c62000219565b5b6000620002ad858286016200026c565b9250506020620002c0858286016200026c565b9150509250929050565b620002d5816200023e565b82525050565b6000602082019050620002f26000830184620002ca565b92915050565b61136780620003086000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c8063715018a611610066578063715018a6146100f75780638b31ddfc146101015780638da5cb5b1461011f578063f2fde38b1461013d578063fc0c546a1461015957610092565b8062831864146100975780631249c58b146100b35780632b7ac3f3146100bd578063550ca5f8146100db575b600080fd5b6100b160048036038101906100ac919061094c565b610177565b005b6100bb610189565b005b6100c5610220565b6040516100d291906109f8565b60405180910390f35b6100f560048036038101906100f09190610d08565b610246565b005b6100ff6104d5565b005b6101096104e9565b6040516101169190610da7565b60405180910390f35b6101276104ef565b6040516101349190610dd1565b60405180910390f35b61015760048036038101906101529190610dec565b610518565b005b61016161059e565b60405161016e9190610e3a565b60405180910390f35b61017f6105c4565b8060038190555050565b6101916105c4565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a627842306040518263ffffffff1660e01b81526004016101ec9190610dd1565b600060405180830381600087803b15801561020657600080fd5b505af115801561021a573d6000803e3d6000fd5b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006102518561064b565b905083604001518114610299576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029090610eb2565b60405180910390fd5b60008460000151856020015186604001516040516020016102bc93929190610ef3565b6040516020818303038152906040528051906020012090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4f7a8a868661031f866106d2565b6040518463ffffffff1660e01b815260040161033d9392919061103b565b602060405180830381865afa15801561035a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037e91906110ac565b9050806103c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b790611125565b60405180910390fd5b60005b875181101561048e5760008882815181106103e1576103e0611145565b5b60200260200101519050600460008260200151815260200190815260200160002060009054906101000a900460ff1615610450576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610447906111c0565b60405180910390fd5b6001600460008360200151815260200190815260200160002060006101000a81548160ff0219169083151502179055505080806001019150506103c3565b5060005b87518110156104cb576104be8882815181106104b1576104b0611145565b5b602002602001015161077d565b8080600101915050610492565b5050505050505050565b6104dd6105c4565b6104e76000610836565b565b60035481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6105206105c4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105925760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105899190610dd1565b60405180910390fd5b61059b81610836565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105cc6108fa565b73ffffffffffffffffffffffffffffffffffffffff166105ea6104ef565b73ffffffffffffffffffffffffffffffffffffffff16146106495761060d6108fa565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106409190610dd1565b60405180910390fd5b565b6000806000801b905060005b83518110156106c857600084828151811061067557610674611145565b5b60200260200101519050828160000151826020015183604001516040516020016106a29493929190611249565b604051602081830303815290604052805190602001209250508080600101915050610657565b5080915050919050565b60606000600867ffffffffffffffff8111156106f1576106f0610a29565b5b60405190808252806020026020018201604052801561071f5781602001602082028036833780820191505090505b50905060005b60088110156107735760208161073b91906112c6565b84901b60e01c63ffffffff1682828151811061075a57610759611145565b5b6020026020010181815250508080600101915050610725565b5080915050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb826000015160035484604001516107d291906112c6565b6040518363ffffffff1660e01b81526004016107ef929190611308565b6020604051808303816000875af115801561080e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083291906110ac565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61092981610916565b811461093457600080fd5b50565b60008135905061094681610920565b92915050565b6000602082840312156109625761096161090c565b5b600061097084828501610937565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109be6109b96109b484610979565b610999565b610979565b9050919050565b60006109d0826109a3565b9050919050565b60006109e2826109c5565b9050919050565b6109f2816109d7565b82525050565b6000602082019050610a0d60008301846109e9565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a6182610a18565b810181811067ffffffffffffffff82111715610a8057610a7f610a29565b5b80604052505050565b6000610a93610902565b9050610a9f8282610a58565b919050565b600067ffffffffffffffff821115610abf57610abe610a29565b5b602082029050602081019050919050565b600080fd5b600080fd5b6000610ae582610979565b9050919050565b610af581610ada565b8114610b0057600080fd5b50565b600081359050610b1281610aec565b92915050565b6000819050919050565b610b2b81610b18565b8114610b3657600080fd5b50565b600081359050610b4881610b22565b92915050565b600060608284031215610b6457610b63610ad5565b5b610b6e6060610a89565b90506000610b7e84828501610b03565b6000830152506020610b9284828501610b39565b6020830152506040610ba684828501610937565b60408301525092915050565b6000610bc5610bc084610aa4565b610a89565b90508083825260208201905060608402830185811115610be857610be7610ad0565b5b835b81811015610c115780610bfd8882610b4e565b845260208401935050606081019050610bea565b5050509392505050565b600082601f830112610c3057610c2f610a13565b5b8135610c40848260208601610bb2565b91505092915050565b600060608284031215610c5f57610c5e610ad5565b5b610c696060610a89565b90506000610c7984828501610b39565b6000830152506020610c8d84828501610b39565b6020830152506040610ca184828501610b39565b60408301525092915050565b600080fd5b60008083601f840112610cc857610cc7610a13565b5b8235905067ffffffffffffffff811115610ce557610ce4610cad565b5b602083019150836001820283011115610d0157610d00610ad0565b5b9250929050565b60008060008060a08587031215610d2257610d2161090c565b5b600085013567ffffffffffffffff811115610d4057610d3f610911565b5b610d4c87828801610c1b565b9450506020610d5d87828801610c49565b935050608085013567ffffffffffffffff811115610d7e57610d7d610911565b5b610d8a87828801610cb2565b925092505092959194509250565b610da181610916565b82525050565b6000602082019050610dbc6000830184610d98565b92915050565b610dcb81610ada565b82525050565b6000602082019050610de66000830184610dc2565b92915050565b600060208284031215610e0257610e0161090c565b5b6000610e1084828501610b03565b91505092915050565b6000610e24826109c5565b9050919050565b610e3481610e19565b82525050565b6000602082019050610e4f6000830184610e2b565b92915050565b600082825260208201905092915050565b7f496e76616c6964206c61737420636c61696d2068617368000000000000000000600082015250565b6000610e9c601783610e55565b9150610ea782610e66565b602082019050919050565b60006020820190508181036000830152610ecb81610e8f565b9050919050565b6000819050919050565b610eed610ee882610b18565b610ed2565b82525050565b6000610eff8286610edc565b602082019150610f0f8285610edc565b602082019150610f1f8284610edc565b602082019150819050949350505050565b600082825260208201905092915050565b82818337600083830152505050565b6000610f5c8385610f30565b9350610f69838584610f41565b610f7283610a18565b840190509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610fb281610916565b82525050565b6000610fc48383610fa9565b60208301905092915050565b6000602082019050919050565b6000610fe882610f7d565b610ff28185610f88565b9350610ffd83610f99565b8060005b8381101561102e5781516110158882610fb8565b975061102083610fd0565b925050600181019050611001565b5085935050505092915050565b60006040820190508181036000830152611056818587610f50565b9050818103602083015261106a8184610fdd565b9050949350505050565b60008115159050919050565b61108981611074565b811461109457600080fd5b50565b6000815190506110a681611080565b92915050565b6000602082840312156110c2576110c161090c565b5b60006110d084828501611097565b91505092915050565b7f496e76616c69642070726f6f6600000000000000000000000000000000000000600082015250565b600061110f600d83610e55565b915061111a826110d9565b602082019050919050565b6000602082019050818103600083015261113e81611102565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e756c6c696669657220616c7265616479207573656400000000000000000000600082015250565b60006111aa601683610e55565b91506111b582611174565b602082019050919050565b600060208201905081810360008301526111d98161119d565b9050919050565b60008160601b9050919050565b60006111f8826111e0565b9050919050565b600061120a826111ed565b9050919050565b61122261121d82610ada565b6111ff565b82525050565b6000819050919050565b61124361123e82610916565b611228565b82525050565b60006112558287610edc565b6020820191506112658286611211565b6014820191506112758285610edc565b6020820191506112858284611232565b60208201915081905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112d182610916565b91506112dc83610916565b92508282026112ea81610916565b9150828204841483151761130157611300611297565b5b5092915050565b600060408201905061131d6000830185610dc2565b61132a6020830184610d98565b939250505056fea26469706673582212202e8091db1385702387a7cc0ad298082ebd590b424342bc1ba53b4effedbb8b8864736f6c63430008180033";

type MinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Minter__factory extends ContractFactory {
  constructor(...args: MinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    plonkVerifier_: AddressLike,
    token_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(plonkVerifier_, token_, overrides || {});
  }
  override deploy(
    plonkVerifier_: AddressLike,
    token_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(plonkVerifier_, token_, overrides || {}) as Promise<
      Minter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Minter__factory {
    return super.connect(runner) as Minter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinterInterface {
    return new Interface(_abi) as MinterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Minter {
    return new Contract(address, _abi, runner) as unknown as Minter;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MintVerifier,
  MintVerifierInterface,
} from "../../contracts/MintVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "plonkVerifier_",
        type: "address",
      },
      {
        internalType: "address",
        name: "rollup_",
        type: "address",
      },
      {
        internalType: "address",
        name: "l2ScrollMessenger_",
        type: "address",
      },
      {
        internalType: "address",
        name: "minter_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ICommon.MintClaim[]",
        name: "claims",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "depositTreeRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "eligibleTreeRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "lastClaimHash",
            type: "bytes32",
          },
        ],
        internalType: "struct MintVerifier.ClaimPublicInputs",
        name: "publicInputs",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositTreeRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eligibleTreeRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollup",
    outputs: [
      {
        internalType: "contract IRollup",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setDepositTreeRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "eligibleTreeRoot_",
        type: "bytes32",
      },
    ],
    name: "setEligibleTreeRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IPlonkVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a3438038062001a348339818101604052810190620000379190620002fb565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200037e565b60405180910390fd5b620000be81620001cd60201b60201c565b5083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200039b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002c38262000296565b9050919050565b620002d581620002b6565b8114620002e157600080fd5b50565b600081519050620002f581620002ca565b92915050565b6000806000806080858703121562000318576200031762000291565b5b60006200032887828801620002e4565b94505060206200033b87828801620002e4565b93505060406200034e87828801620002e4565b92505060606200036187828801620002e4565b91505092959194509250565b6200037881620002b6565b82525050565b60006020820190506200039560008301846200036d565b92915050565b61168980620003ab6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a61461012e5780638da5cb5b14610138578063b51d6ebc14610156578063cb23bcb514610172578063def496a814610190578063f2fde38b146101ae576100a9565b806307546172146100ae5780631d9a07b9146100cc5780632b7ac3f3146100ea5780632dbdbc8014610108578063550ca5f814610112575b600080fd5b6100b66101ca565b6040516100c39190610a44565b60405180910390f35b6100d46101f0565b6040516100e19190610a78565b60405180910390f35b6100f26101f6565b6040516100ff9190610af2565b60405180910390f35b61011061021c565b005b61012c60048036038101906101279190610e30565b6102bd565b005b610136610518565b005b61014061052c565b60405161014d9190610a44565b60405180910390f35b610170600480360381019061016b9190610ec0565b610555565b005b61017a610567565b6040516101879190610f0e565b60405180910390f35b61019861058d565b6040516101a59190610a78565b60405180910390f35b6101c860048036038101906101c39190610f29565b610593565b005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610224610619565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d9a07b96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b59190610f6b565b600681905550565b60006102c8856106a0565b905083604001518114610310576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030790610ff5565b60405180910390fd5b600084600001518560200151866040015160405160200161033393929190611036565b6040516020818303038152906040528051906020012090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4f7a8a868661039686610727565b6040518463ffffffff1660e01b81526004016103b49392919061117e565b602060405180830381865afa1580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f591906111ef565b905080610437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042e90611268565b60405180910390fd5b60005b875181101561050557600088828151811061045857610457611288565b5b60200260200101519050600760008260200151815260200190815260200160002060009054906101000a900460ff16156104c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104be90611303565b60405180910390fd5b6001600760008360200151815260200190815260200160002060006101000a81548160ff02191690831515021790555050808060010191505061043a565b5061050f876107d2565b50505050505050565b610520610619565b61052a6000610937565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61055d610619565b8060058190555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b61059b610619565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361060d5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106049190610a44565b60405180910390fd5b61061681610937565b50565b6106216109fb565b73ffffffffffffffffffffffffffffffffffffffff1661063f61052c565b73ffffffffffffffffffffffffffffffffffffffff161461069e576106626109fb565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106959190610a44565b60405180910390fd5b565b6000806000801b905060005b835181101561071d5760008482815181106106ca576106c9611288565b5b60200260200101519050828160000151826020015183604001516040516020016106f7949392919061138c565b6040516020818303038152906040528051906020012092505080806001019150506106ac565b5080915050919050565b60606000600867ffffffffffffffff81111561074657610745610b37565b5b6040519080825280602002602001820160405280156107745781602001602082028036833780820191505090505b50905060005b60088110156107c8576020816107909190611409565b84901b60e01c63ffffffff168282815181106107af576107ae611288565b5b602002602001018181525050808060010191505061077a565b5080915050919050565b6000807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90506000633fa54ecb60e01b84604051602401610813919061155a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f7b157784600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168685876108df6109fb565b6040518763ffffffff1660e01b81526004016108ff9594939291906115f9565b6000604051808303818588803b15801561091857600080fd5b505af115801561092c573d6000803e3d6000fd5b505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a2e82610a03565b9050919050565b610a3e81610a23565b82525050565b6000602082019050610a596000830184610a35565b92915050565b6000819050919050565b610a7281610a5f565b82525050565b6000602082019050610a8d6000830184610a69565b92915050565b6000819050919050565b6000610ab8610ab3610aae84610a03565b610a93565b610a03565b9050919050565b6000610aca82610a9d565b9050919050565b6000610adc82610abf565b9050919050565b610aec81610ad1565b82525050565b6000602082019050610b076000830184610ae3565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b6f82610b26565b810181811067ffffffffffffffff82111715610b8e57610b8d610b37565b5b80604052505050565b6000610ba1610b0d565b9050610bad8282610b66565b919050565b600067ffffffffffffffff821115610bcd57610bcc610b37565b5b602082029050602081019050919050565b600080fd5b600080fd5b610bf181610a23565b8114610bfc57600080fd5b50565b600081359050610c0e81610be8565b92915050565b610c1d81610a5f565b8114610c2857600080fd5b50565b600081359050610c3a81610c14565b92915050565b6000819050919050565b610c5381610c40565b8114610c5e57600080fd5b50565b600081359050610c7081610c4a565b92915050565b600060608284031215610c8c57610c8b610be3565b5b610c966060610b97565b90506000610ca684828501610bff565b6000830152506020610cba84828501610c2b565b6020830152506040610cce84828501610c61565b60408301525092915050565b6000610ced610ce884610bb2565b610b97565b90508083825260208201905060608402830185811115610d1057610d0f610bde565b5b835b81811015610d395780610d258882610c76565b845260208401935050606081019050610d12565b5050509392505050565b600082601f830112610d5857610d57610b21565b5b8135610d68848260208601610cda565b91505092915050565b600060608284031215610d8757610d86610be3565b5b610d916060610b97565b90506000610da184828501610c2b565b6000830152506020610db584828501610c2b565b6020830152506040610dc984828501610c2b565b60408301525092915050565b600080fd5b60008083601f840112610df057610def610b21565b5b8235905067ffffffffffffffff811115610e0d57610e0c610dd5565b5b602083019150836001820283011115610e2957610e28610bde565b5b9250929050565b60008060008060a08587031215610e4a57610e49610b17565b5b600085013567ffffffffffffffff811115610e6857610e67610b1c565b5b610e7487828801610d43565b9450506020610e8587828801610d71565b935050608085013567ffffffffffffffff811115610ea657610ea5610b1c565b5b610eb287828801610dda565b925092505092959194509250565b600060208284031215610ed657610ed5610b17565b5b6000610ee484828501610c2b565b91505092915050565b6000610ef882610abf565b9050919050565b610f0881610eed565b82525050565b6000602082019050610f236000830184610eff565b92915050565b600060208284031215610f3f57610f3e610b17565b5b6000610f4d84828501610bff565b91505092915050565b600081519050610f6581610c14565b92915050565b600060208284031215610f8157610f80610b17565b5b6000610f8f84828501610f56565b91505092915050565b600082825260208201905092915050565b7f496e76616c6964206c61737420636c61696d2068617368000000000000000000600082015250565b6000610fdf601783610f98565b9150610fea82610fa9565b602082019050919050565b6000602082019050818103600083015261100e81610fd2565b9050919050565b6000819050919050565b61103061102b82610a5f565b611015565b82525050565b6000611042828661101f565b602082019150611052828561101f565b602082019150611062828461101f565b602082019150819050949350505050565b600082825260208201905092915050565b82818337600083830152505050565b600061109f8385611073565b93506110ac838584611084565b6110b583610b26565b840190509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6110f581610c40565b82525050565b600061110783836110ec565b60208301905092915050565b6000602082019050919050565b600061112b826110c0565b61113581856110cb565b9350611140836110dc565b8060005b8381101561117157815161115888826110fb565b975061116383611113565b925050600181019050611144565b5085935050505092915050565b60006040820190508181036000830152611199818587611093565b905081810360208301526111ad8184611120565b9050949350505050565b60008115159050919050565b6111cc816111b7565b81146111d757600080fd5b50565b6000815190506111e9816111c3565b92915050565b60006020828403121561120557611204610b17565b5b6000611213848285016111da565b91505092915050565b7f496e76616c69642070726f6f6600000000000000000000000000000000000000600082015250565b6000611252600d83610f98565b915061125d8261121c565b602082019050919050565b6000602082019050818103600083015261128181611245565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e756c6c696669657220616c7265616479207573656400000000000000000000600082015250565b60006112ed601683610f98565b91506112f8826112b7565b602082019050919050565b6000602082019050818103600083015261131c816112e0565b9050919050565b60008160601b9050919050565b600061133b82611323565b9050919050565b600061134d82611330565b9050919050565b61136561136082610a23565b611342565b82525050565b6000819050919050565b61138661138182610c40565b61136b565b82525050565b6000611398828761101f565b6020820191506113a88286611354565b6014820191506113b8828561101f565b6020820191506113c88284611375565b60208201915081905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061141482610c40565b915061141f83610c40565b925082820261142d81610c40565b91508282048414831517611444576114436113da565b5b5092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61148081610a23565b82525050565b61148f81610a5f565b82525050565b6060820160008201516114ab6000850182611477565b5060208201516114be6020850182611486565b5060408201516114d160408501826110ec565b50505050565b60006114e38383611495565b60608301905092915050565b6000602082019050919050565b60006115078261144b565b6115118185611456565b935061151c83611467565b8060005b8381101561154d57815161153488826114d7565b975061153f836114ef565b925050600181019050611520565b5085935050505092915050565b6000602082019050818103600083015261157481846114fc565b905092915050565b61158581610c40565b82525050565b600081519050919050565b60005b838110156115b4578082015181840152602081019050611599565b60008484015250505050565b60006115cb8261158b565b6115d58185611073565b93506115e5818560208601611596565b6115ee81610b26565b840191505092915050565b600060a08201905061160e6000830188610a35565b61161b602083018761157c565b818103604083015261162d81866115c0565b905061163c606083018561157c565b6116496080830184610a35565b969550505050505056fea264697066735822122032eadf6d3317cb157ff74eacbff98ab39eefb721b288335bd71a2e5c37236ac164736f6c63430008180033";

type MintVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MintVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MintVerifier__factory extends ContractFactory {
  constructor(...args: MintVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    plonkVerifier_: AddressLike,
    rollup_: AddressLike,
    l2ScrollMessenger_: AddressLike,
    minter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      plonkVerifier_,
      rollup_,
      l2ScrollMessenger_,
      minter_,
      overrides || {}
    );
  }
  override deploy(
    plonkVerifier_: AddressLike,
    rollup_: AddressLike,
    l2ScrollMessenger_: AddressLike,
    minter_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      plonkVerifier_,
      rollup_,
      l2ScrollMessenger_,
      minter_,
      overrides || {}
    ) as Promise<
      MintVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MintVerifier__factory {
    return super.connect(runner) as MintVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintVerifierInterface {
    return new Interface(_abi) as MintVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MintVerifier {
    return new Contract(address, _abi, runner) as unknown as MintVerifier;
  }
}

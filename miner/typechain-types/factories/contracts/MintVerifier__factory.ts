/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MintVerifier,
  MintVerifierInterface,
} from "../../contracts/MintVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "plonkVerifier_",
        type: "address",
      },
      {
        internalType: "address",
        name: "rollup_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct MintVerifier.MintClaim[]",
        name: "claims",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "depositTreeRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "eligibleTreeRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "lastClaimHash",
            type: "bytes32",
          },
        ],
        internalType: "struct MintVerifier.ClaimPublicInputs",
        name: "publicInputs",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositTreeRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eligibleTreeRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollup",
    outputs: [
      {
        internalType: "contract IRollup",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setDepositTreeRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "eligibleTreeRoot_",
        type: "bytes32",
      },
    ],
    name: "setEligibleTreeRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IPlonkVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015cc380380620015cc833981810160405281019062000037919062000277565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a49190620002cf565b60405180910390fd5b620000be816200014960201b60201c565b5081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002ec565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200023f8262000212565b9050919050565b620002518162000232565b81146200025d57600080fd5b50565b600081519050620002718162000246565b92915050565b600080604083850312156200029157620002906200020d565b5b6000620002a18582860162000260565b9250506020620002b48582860162000260565b9150509250929050565b620002c98162000232565b82525050565b6000602082019050620002e66000830184620002be565b92915050565b6112d080620002fc6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461010f578063b51d6ebc1461012d578063cb23bcb514610149578063def496a814610167578063f2fde38b146101855761009e565b80631d9a07b9146100a35780632b7ac3f3146100c15780632dbdbc80146100df578063550ca5f8146100e9578063715018a614610105575b600080fd5b6100ab6101a1565b6040516100b8919061086b565b60405180910390f35b6100c96101a7565b6040516100d69190610905565b60405180910390f35b6100e76101cd565b005b61010360048036038101906100fe9190610c55565b61026e565b005b61010d6104c9565b005b6101176104dd565b6040516101249190610cf4565b60405180910390f35b61014760048036038101906101429190610d0f565b610506565b005b610151610518565b60405161015e9190610d5d565b60405180910390f35b61016f61053e565b60405161017c919061086b565b60405180910390f35b61019f600480360381019061019a9190610d78565b610544565b005b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101d56105ca565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d9a07b96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102669190610dba565b600581905550565b600061027985610651565b9050836040015181146102c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b890610e44565b60405180910390fd5b60008460000151856020015186604001516040516020016102e493929190610e85565b6040516020818303038152906040528051906020012090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4f7a8a8686610347866106d8565b6040518463ffffffff1660e01b815260040161036593929190610fcd565b602060405180830381865afa158015610382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a6919061103e565b9050806103e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103df906110b7565b60405180910390fd5b60005b87518110156104b6576000888281518110610409576104086110d7565b5b60200260200101519050600660008260200151815260200190815260200160002060009054906101000a900460ff1615610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046f90611152565b60405180910390fd5b6001600660008360200151815260200190815260200160002060006101000a81548160ff0219169083151502179055505080806001019150506103eb565b506104c087610783565b50505050505050565b6104d16105ca565b6104db6000610786565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61050e6105ca565b8060048190555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b61054c6105ca565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105be5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105b59190610cf4565b60405180910390fd5b6105c781610786565b50565b6105d261084a565b73ffffffffffffffffffffffffffffffffffffffff166105f06104dd565b73ffffffffffffffffffffffffffffffffffffffff161461064f5761061361084a565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016106469190610cf4565b60405180910390fd5b565b6000806000801b905060005b83518110156106ce57600084828151811061067b5761067a6110d7565b5b60200260200101519050828160000151826020015183604001516040516020016106a894939291906111db565b60405160208183030381529060405280519060200120925050808060010191505061065d565b5080915050919050565b60606000600867ffffffffffffffff8111156106f7576106f661094a565b5b6040519080825280602002602001820160405280156107255781602001602082028036833780820191505090505b50905060005b6008811015610779576020816107419190611258565b84901b60e01c63ffffffff168282815181106107605761075f6110d7565b5b602002602001018181525050808060010191505061072b565b5080915050919050565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61086581610852565b82525050565b6000602082019050610880600083018461085c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108cb6108c66108c184610886565b6108a6565b610886565b9050919050565b60006108dd826108b0565b9050919050565b60006108ef826108d2565b9050919050565b6108ff816108e4565b82525050565b600060208201905061091a60008301846108f6565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61098282610939565b810181811067ffffffffffffffff821117156109a1576109a061094a565b5b80604052505050565b60006109b4610920565b90506109c08282610979565b919050565b600067ffffffffffffffff8211156109e0576109df61094a565b5b602082029050602081019050919050565b600080fd5b600080fd5b6000610a0682610886565b9050919050565b610a16816109fb565b8114610a2157600080fd5b50565b600081359050610a3381610a0d565b92915050565b610a4281610852565b8114610a4d57600080fd5b50565b600081359050610a5f81610a39565b92915050565b6000819050919050565b610a7881610a65565b8114610a8357600080fd5b50565b600081359050610a9581610a6f565b92915050565b600060608284031215610ab157610ab06109f6565b5b610abb60606109aa565b90506000610acb84828501610a24565b6000830152506020610adf84828501610a50565b6020830152506040610af384828501610a86565b60408301525092915050565b6000610b12610b0d846109c5565b6109aa565b90508083825260208201905060608402830185811115610b3557610b346109f1565b5b835b81811015610b5e5780610b4a8882610a9b565b845260208401935050606081019050610b37565b5050509392505050565b600082601f830112610b7d57610b7c610934565b5b8135610b8d848260208601610aff565b91505092915050565b600060608284031215610bac57610bab6109f6565b5b610bb660606109aa565b90506000610bc684828501610a50565b6000830152506020610bda84828501610a50565b6020830152506040610bee84828501610a50565b60408301525092915050565b600080fd5b60008083601f840112610c1557610c14610934565b5b8235905067ffffffffffffffff811115610c3257610c31610bfa565b5b602083019150836001820283011115610c4e57610c4d6109f1565b5b9250929050565b60008060008060a08587031215610c6f57610c6e61092a565b5b600085013567ffffffffffffffff811115610c8d57610c8c61092f565b5b610c9987828801610b68565b9450506020610caa87828801610b96565b935050608085013567ffffffffffffffff811115610ccb57610cca61092f565b5b610cd787828801610bff565b925092505092959194509250565b610cee816109fb565b82525050565b6000602082019050610d096000830184610ce5565b92915050565b600060208284031215610d2557610d2461092a565b5b6000610d3384828501610a50565b91505092915050565b6000610d47826108d2565b9050919050565b610d5781610d3c565b82525050565b6000602082019050610d726000830184610d4e565b92915050565b600060208284031215610d8e57610d8d61092a565b5b6000610d9c84828501610a24565b91505092915050565b600081519050610db481610a39565b92915050565b600060208284031215610dd057610dcf61092a565b5b6000610dde84828501610da5565b91505092915050565b600082825260208201905092915050565b7f496e76616c6964206c61737420636c61696d2068617368000000000000000000600082015250565b6000610e2e601783610de7565b9150610e3982610df8565b602082019050919050565b60006020820190508181036000830152610e5d81610e21565b9050919050565b6000819050919050565b610e7f610e7a82610852565b610e64565b82525050565b6000610e918286610e6e565b602082019150610ea18285610e6e565b602082019150610eb18284610e6e565b602082019150819050949350505050565b600082825260208201905092915050565b82818337600083830152505050565b6000610eee8385610ec2565b9350610efb838584610ed3565b610f0483610939565b840190509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610f4481610a65565b82525050565b6000610f568383610f3b565b60208301905092915050565b6000602082019050919050565b6000610f7a82610f0f565b610f848185610f1a565b9350610f8f83610f2b565b8060005b83811015610fc0578151610fa78882610f4a565b9750610fb283610f62565b925050600181019050610f93565b5085935050505092915050565b60006040820190508181036000830152610fe8818587610ee2565b90508181036020830152610ffc8184610f6f565b9050949350505050565b60008115159050919050565b61101b81611006565b811461102657600080fd5b50565b60008151905061103881611012565b92915050565b6000602082840312156110545761105361092a565b5b600061106284828501611029565b91505092915050565b7f496e76616c69642070726f6f6600000000000000000000000000000000000000600082015250565b60006110a1600d83610de7565b91506110ac8261106b565b602082019050919050565b600060208201905081810360008301526110d081611094565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e756c6c696669657220616c7265616479207573656400000000000000000000600082015250565b600061113c601683610de7565b915061114782611106565b602082019050919050565b6000602082019050818103600083015261116b8161112f565b9050919050565b60008160601b9050919050565b600061118a82611172565b9050919050565b600061119c8261117f565b9050919050565b6111b46111af826109fb565b611191565b82525050565b6000819050919050565b6111d56111d082610a65565b6111ba565b82525050565b60006111e78287610e6e565b6020820191506111f782866111a3565b6014820191506112078285610e6e565b60208201915061121782846111c4565b60208201915081905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061126382610a65565b915061126e83610a65565b925082820261127c81610a65565b9150828204841483151761129357611292611229565b5b509291505056fea2646970667358221220290805f519439423043d5f432c693b3b899b046a5330987f52893d4fac40cb2264736f6c63430008180033";

type MintVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MintVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MintVerifier__factory extends ContractFactory {
  constructor(...args: MintVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    plonkVerifier_: AddressLike,
    rollup_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(plonkVerifier_, rollup_, overrides || {});
  }
  override deploy(
    plonkVerifier_: AddressLike,
    rollup_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(plonkVerifier_, rollup_, overrides || {}) as Promise<
      MintVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MintVerifier__factory {
    return super.connect(runner) as MintVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintVerifierInterface {
    return new Interface(_abi) as MintVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MintVerifier {
    return new Contract(address, _abi, runner) as unknown as MintVerifier;
  }
}

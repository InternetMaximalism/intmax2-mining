/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Deposit, DepositInterface } from "../../contracts/Deposit";

const _abi = [
  {
    inputs: [],
    name: "MerkleTreeFull",
    type: "error",
  },
  {
    inputs: [],
    name: "depositCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBranch",
    outputs: [
      {
        internalType: "bytes32[32]",
        name: "",
        type: "bytes32[32]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "leafHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "smtProof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "verifyMerkleProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506104e1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632dfdf0b514610046578063ea8ef6be14610064578063fb57083414610082575b600080fd5b61004e6100b2565b60405161005b9190610210565b60405180910390f35b61006c6100b8565b60405161007991906102e0565b60405180910390f35b61009c6004803603810190610097919061038f565b610103565b6040516100a99190610414565b60405180910390f35b60205481565b6100c06101d4565b60006020806020026040519081016040528092919082602080156100f9576020028201915b8154815260200190600101908083116100e5575b5050505050905090565b60008085905060005b60208110156101c557600180828763ffffffff16901c1663ffffffff1603610175578581602081106101415761014061042f565b5b60200201358260405160200161015892919061047f565b6040516020818303038152906040528051906020012091506101b8565b818682602081106101895761018861042f565b5b602002013560405160200161019f92919061047f565b6040516020818303038152906040528051906020012091505b808060010191505061010c565b50828114915050949350505050565b604051806104000160405280602090602082028036833780820191505090505090565b6000819050919050565b61020a816101f7565b82525050565b60006020820190506102256000830184610201565b92915050565b600060209050919050565b600081905092915050565b6000819050919050565b6000819050919050565b61025e8161024b565b82525050565b60006102708383610255565b60208301905092915050565b6000602082019050919050565b6102928161022b565b61029c8184610236565b92506102a782610241565b8060005b838110156102d85781516102bf8782610264565b96506102ca8361027c565b9250506001810190506102ab565b505050505050565b6000610400820190506102f66000830184610289565b92915050565b600080fd5b61030a8161024b565b811461031557600080fd5b50565b60008135905061032781610301565b92915050565b600080fd5b600081905082602080028201111561034d5761034c61032d565b5b92915050565b600063ffffffff82169050919050565b61036c81610353565b811461037757600080fd5b50565b60008135905061038981610363565b92915050565b60008060008061046085870312156103aa576103a96102fc565b5b60006103b887828801610318565b94505060206103c987828801610332565b9350506104206103db8782880161037a565b9250506104406103ed87828801610318565b91505092959194509250565b60008115159050919050565b61040e816103f9565b82525050565b60006020820190506104296000830184610405565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b6104796104748261024b565b61045e565b82525050565b600061048b8285610468565b60208201915061049b8284610468565b602082019150819050939250505056fea264697066735822122052ec9fa8f2094fd6e29b923480905bf24c76b597641659b94e643ffba7dd33c664736f6c63430008180033";

type DepositConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Deposit__factory extends ContractFactory {
  constructor(...args: DepositConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Deposit & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Deposit__factory {
    return super.connect(runner) as Deposit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositInterface {
    return new Interface(_abi) as DepositInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Deposit {
    return new Contract(address, _abi, runner) as unknown as Deposit;
  }
}

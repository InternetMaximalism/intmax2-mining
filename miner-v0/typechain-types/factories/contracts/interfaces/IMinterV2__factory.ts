/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMinterV2,
  IMinterV2Interface,
} from "../../../contracts/interfaces/IMinterV2";

const _abi = [
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ICommon.MintClaim[]",
        name: "claims",
        type: "tuple[]",
      },
    ],
    name: "processClaims",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMinterV2__factory {
  static readonly abi = _abi;
  static createInterface(): IMinterV2Interface {
    return new Interface(_abi) as IMinterV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): IMinterV2 {
    return new Contract(address, _abi, runner) as unknown as IMinterV2;
  }
}
